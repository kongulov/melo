<?php

namespace App\Exceptions;

use Illuminate\Auth\AuthenticationException;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Http\Response;
use Illuminate\Validation\ValidationException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of exception types with their corresponding custom log levels.
     *
     * @var array<class-string<\Throwable>, \Psr\Log\LogLevel::*>
     */
    protected $levels = [
        //
    ];

    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<\Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e)
    {
        if ($request->is('api/*')) {
            $code = $e->getCode() > 0 ? $e->getCode() : 500;
            $data = [
                'success' => false,
                'message' => $e->getMessage(),
            ];

            if ($e instanceof ModelNotFoundException) {
                $code = Response::HTTP_NOT_FOUND;
                $data['message'] = 'Result not found';
            }
            elseif ($e instanceof NotFoundHttpException) {
                $code = Response::HTTP_NOT_FOUND;
                $data['message'] = 'Result not found';
            }
            elseif ($e instanceof RouteNotFoundException) {
                $code = Response::HTTP_NOT_FOUND;
                $data['message'] = 'Route [ '.$request->getRequestUri().' ] not defined.';
            }
            elseif ($e instanceof AuthenticationException) {
                $code = Response::HTTP_UNAUTHORIZED;
            }
            elseif ($e instanceof ValidationException) {
                $code = Response::HTTP_UNPROCESSABLE_ENTITY;
                $errors = $e->validator->errors();
                $data['message'] = 'Validation error';
                $data['errors'] = $errors->messages();
            }

            return response()->json($data, $code);
        }

        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
